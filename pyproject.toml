[tool.poetry]
name = "capella-console-client"
version = "0.11.0"
description = "Python SDK for api.capellaspace.com (search, order, download)"
authors = ["Thomas Beyer <thomas.beyer@capellaspace.com>"]
repository = "https://github.com/capellaspace/console-client"
documentation = "https://capella-console-client.readthedocs.io/"
classifiers=[
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    # supported python versions
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Software Development :: Libraries",
    "Topic :: Scientific/Engineering :: Image Processing",
]
keywords = [ "Capella Space", "Earth Observation", "Capella Console", "Synthetic Aperture Radar", "SAR" ]
readme = "README.md"
license = "MIT"

[tool.poetry.scripts]
capella-console-wizard = 'capella_console_client.cli.wizard:main'


[tool.poetry.dependencies]
python = "^3.8"
python-dateutil = "^2.8.2"
httpx = "^0.23.0"
retrying = "^1.3.3"
rich = "^12.5.1"
typer = {version = "^0.6.1", optional = true }
questionary = {version = "^1.10.0", optional = true }
tabulate = {version = "^0.8.10", optional = true }
Sphinx = {version = "^5.1.1", optional = true}
sphinx-rtd-theme = {version = "^1.0.0", optional = true}
sphinx-autobuild = {version = "^2021.3.14", optional = true}
sphinx-copybutton = {version = "^0.5.0", optional = true}
sphinx-autodoc-typehints = {version = "^1.19.2", optional = true}

[tool.poetry.extras]
wizard = ["typer", "questionary", "tabulate"]
docs = ["Sphinx", "sphinx-rtd-theme", "sphinx-autobuild", "sphinx-copybutton", "sphinx-autodoc-typehints"]

[tool.poetry.dev-dependencies]
pytest = "^7.2.0"
pytest-cov = "^3.0.0"
pytest-httpx = "^0.21.0"
pytest-html = "^3.1.1"
coveralls = "^3.3.1"
black = "^22.8.0"
mypy = "^0.971"
rope = "^1.3.0"

[tool.black]
line-length = 120
target-version = [ "py37", "py38", "py39" ]
exclude = "((.eggs | .git | .pytype | .pytest_cache | build | dist))"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.mypy]
warn_unused_configs = true
ignore_missing_imports = true
